[{"content":"What even are these creatures? According to wikipedia,\nA parser combinator is a higher-order function that accepts several parsers as input and returns a new parser as its output.\n","permalink":"http://localhost:1313/posts/parser-combinators/","summary":"\u003ch1 id=\"what-even-are-these-creatures\"\u003eWhat even are these creatures?\u003c/h1\u003e\n\u003cp\u003eAccording to wikipedia,\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003eA parser combinator is a higher-order function that accepts several parsers as input and returns a new parser as its output.\u003c/p\u003e\n\u003c/blockquote\u003e","title":"Parser Combinators"},{"content":"PCOM-GO Golang Built a parser combinator library in Go for constructing complex parsers. Implemented core combinators like or, and, Many0, Seq, and Lazy for recursive parsing. Added transformation features with ”Map” and flexible parsing using ”Between” combinators. Conducted rigorous error handling, testing, and optimization for reliability and performance. AI vs Human Voice Recognizer Python, PyTorch, Librosa, Numpy Built a classifier that distinguishes real audio from AI-generated. Extracted MEL Spectrogram from audio and created a balanced dataset. Compared various architectures like AlexNet, MobileNet, and ResNet against a simpler CNN. Achieved a maximum accuracy of 99.7 % using early stopping and 5-fold cross-validation. Hisaab-Kitaab NextJS, ReactJS, PostgreSQL, NodeJS Built a daily expense tracker using React, NextJS, and PostgreSQL. Implemented skeleton loading for better loading of UI and improved user experience. Visualized the monthly expenses to improve usability. Self-learning Platformer Game Python, PyGame Designed and developed a platformer game. Built a fully connected neural network (FCNN) from scratch to train the game to play autonomously. ","permalink":"http://localhost:1313/projects/","summary":"\u003ch4 id=\"pcom-gohttpsgithubcomblackbuckpcom-go-golang\"\u003e\u003ca href=\"https://github.com/BlackBuck/pcom-go\"\u003ePCOM-GO\u003c/a\u003e \u003ccode\u003eGolang\u003c/code\u003e\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt a parser combinator library in Go for constructing complex parsers.\u003c/li\u003e\n\u003cli\u003eImplemented core combinators like or, and, Many0, Seq, and Lazy for recursive parsing.\u003c/li\u003e\n\u003cli\u003eAdded transformation features with ”Map” and flexible parsing using ”Between” combinators.\u003c/li\u003e\n\u003cli\u003eConducted rigorous error handling, testing, and optimization for reliability and performance.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"ai-vs-human-voice-recognizerhttpsgithubcomblackbuckdeepfake-audio-recognition-python-pytorch-librosa-numpy\"\u003e\u003ca href=\"https://github.com/BlackBuck/Deepfake-Audio-Recognition\"\u003eAI vs Human Voice Recognizer\u003c/a\u003e \u003ccode\u003ePython, PyTorch, Librosa, Numpy\u003c/code\u003e\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt a classifier that distinguishes real audio from AI-generated.\u003c/li\u003e\n\u003cli\u003eExtracted MEL Spectrogram from audio and created a balanced dataset.\u003c/li\u003e\n\u003cli\u003eCompared various architectures like AlexNet, MobileNet, and ResNet against a simpler CNN.\u003c/li\u003e\n\u003cli\u003eAchieved a maximum accuracy of 99.7 % using early stopping and 5-fold cross-validation.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"hisaab-kitaabhttpsgithubcomblackbuckhisaab-nextjs-reactjs-postgresql-nodejs\"\u003e\u003ca href=\"https://github.com/BlackBuck/hisaab\"\u003eHisaab-Kitaab\u003c/a\u003e \u003ccode\u003eNextJS, ReactJS, PostgreSQL, NodeJS\u003c/code\u003e\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt a daily expense tracker using React, NextJS, and PostgreSQL.\u003c/li\u003e\n\u003cli\u003eImplemented skeleton loading for better loading of UI and improved user experience.\u003c/li\u003e\n\u003cli\u003eVisualized the monthly expenses to improve usability.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch4 id=\"self-learning-platformer-gamehttpsgithubcomblackbuckself-learning-runner-python-pygame\"\u003e\u003ca href=\"https://github.com/BlackBuck/Self-learning-runner/\"\u003eSelf-learning Platformer Game\u003c/a\u003e \u003ccode\u003ePython, PyGame\u003c/code\u003e\u003c/h4\u003e\n\u003cul\u003e\n\u003cli\u003eDesigned and developed a platformer game.\u003c/li\u003e\n\u003cli\u003eBuilt a fully connected neural network (FCNN) from scratch to train the game to play autonomously.\u003c/li\u003e\n\u003c/ul\u003e","title":"Projects"}]